{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/svelte/store/index.mjs","../../node_modules/svelte-spa-router/Router.svelte","../../node_modules/regexparam/dist/regexparam.mjs","../../src/puzzleHeader.svelte","../../src/Celebration.svelte","../../src/puzzles/Honnleath.svelte","../../src/puzzles/Anagram.svelte","../../src/puzzles/Valves.svelte","../../src/utils/fisher-yates-shuffle.js","../../src/puzzles/WordDiscs.svelte","../../src/utils/randomInt.js","../../src/GmCheatSheet.svelte","../../src/routes.js","../../src/main.ts"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? undefined : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            const remove = [];\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j++];\n                if (!attributes[attribute.name]) {\n                    remove.push(attribute.name);\n                }\n            }\n            for (let k = 0; k < remove.length; k++) {\n                node.removeAttribute(remove[k]);\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    const z_index = (parseInt(computed_style.zIndex) || 0) - 1;\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', `display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ` +\n        `overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: ${z_index};`);\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = `data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>`;\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(anchor = null) {\n        this.a = anchor;\n        this.e = this.n = null;\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.h(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ``}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error(`Function called outside component initialization`);\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error(`Cannot have duplicate keys in a keyed each`);\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += \" \" + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += \" \" + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : ``;\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const prop_values = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, prop_values, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.24.1' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev(\"SvelteDOMRemove\", { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? [\"capture\"] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev(\"SvelteDOMAddEventListener\", { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev(\"SvelteDOMRemoveEventListener\", { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev(\"SvelteDOMRemoveAttribute\", { node, attribute });\n    else\n        dispatch_dev(\"SvelteDOMSetAttribute\", { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev(\"SvelteDOMSetProperty\", { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev(\"SvelteDOMSetDataset\", { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev(\"SvelteDOMSetData\", { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(`'target' is a required option`);\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn(`Component was already destroyed`); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error(`Infinite loop detected`);\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, update_slot, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal';\nexport { get_store_value as get } from '../internal';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe,\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = [];\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (let i = 0; i < subscribers.length; i += 1) {\n                    const s = subscribers[i];\n                    s[1]();\n                    subscriber_queue.push(s, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.push(subscriber);\n        if (subscribers.length === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            const index = subscribers.indexOf(subscriber);\n            if (index !== -1) {\n                subscribers.splice(index, 1);\n            }\n            if (subscribers.length === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","<script context=\"module\">\nimport {readable, derived} from 'svelte/store'\nimport {tick} from 'svelte'\n\n/**\n * Wraps a route to add route pre-conditions.\n * \n * @param {SvelteComponent} route - Svelte component for the route\n * @param {Object} [userData] - Optional object that will be passed to each `conditionsFailed` event\n * @param {...Function} conditions - Route pre-conditions to add, which will be executed in order\n * @returns {Object} Wrapped route\n */\nexport function wrap(route, userData, ...conditions) {\n    // Check if we don't have userData\n    if (userData && typeof userData == 'function') {\n        conditions = (conditions && conditions.length) ? conditions : []\n        conditions.unshift(userData)\n        userData = undefined\n    }\n\n    // Parameter route and each item of conditions must be functions\n    if (!route || typeof route != 'function') {\n        throw Error('Invalid parameter route')\n    }\n    if (conditions && conditions.length) {\n        for (let i = 0; i < conditions.length; i++) {\n            if (!conditions[i] || typeof conditions[i] != 'function') {\n                throw Error('Invalid parameter conditions[' + i + ']')\n            }\n        }\n    }\n\n    // Returns an object that contains all the functions to execute too\n    const obj = {route, userData}\n    if (conditions && conditions.length) {\n        obj.conditions = conditions\n    }\n\n    // The _sveltesparouter flag is to confirm the object was created by this router\n    Object.defineProperty(obj, '_sveltesparouter', {\n        value: true\n    })\n\n    return obj\n}\n\n/**\n * @typedef {Object} Location\n * @property {string} location - Location (page/view), for example `/book`\n * @property {string} [querystring] - Querystring from the hash, as a string not parsed\n */\n/**\n * Returns the current location from the hash.\n *\n * @returns {Location} Location object\n * @private\n */\nfunction getLocation() {\n    const hashPosition = window.location.href.indexOf('#/')\n    let location = (hashPosition > -1) ? window.location.href.substr(hashPosition + 1) : '/'\n\n    // Check if there's a querystring\n    const qsPosition = location.indexOf('?')\n    let querystring = ''\n    if (qsPosition > -1) {\n        querystring = location.substr(qsPosition + 1)\n        location = location.substr(0, qsPosition)\n    }\n\n    return {location, querystring}\n}\n\n/**\n * Readable store that returns the current full location (incl. querystring)\n */\nexport const loc = readable(\n    null,\n    // eslint-disable-next-line prefer-arrow-callback\n    function start(set) {\n        set(getLocation())\n\n        const update = () => {\n            set(getLocation())\n        }\n        window.addEventListener('hashchange', update, false)\n\n        return function stop() {\n            window.removeEventListener('hashchange', update, false)\n        }\n    }\n)\n\n/**\n * Readable store that returns the current location\n */\nexport const location = derived(\n    loc,\n    ($loc) => $loc.location\n)\n\n/**\n * Readable store that returns the current querystring\n */\nexport const querystring = derived(\n    loc,\n    ($loc) => $loc.querystring\n)\n\n/**\n * Navigates to a new page programmatically.\n *\n * @param {string} location - Path to navigate to (must start with `/` or '#/')\n * @return {Promise} Promise that resolves after the page navigation has completed\n */\nexport function push(location) {\n    if (!location || location.length < 1 || (location.charAt(0) != '/' && location.indexOf('#/') !== 0)) {\n        throw Error('Invalid parameter location')\n    }\n\n    // Execute this code when the current call stack is complete\n    return tick().then(() => {\n        window.location.hash = (location.charAt(0) == '#' ? '' : '#') + location\n    })\n}\n\n/**\n * Navigates back in history (equivalent to pressing the browser's back button).\n * \n * @return {Promise} Promise that resolves after the page navigation has completed\n */\nexport function pop() {\n    // Execute this code when the current call stack is complete\n    return tick().then(() => {\n        window.history.back()\n    })\n}\n\n/**\n * Replaces the current page but without modifying the history stack.\n *\n * @param {string} location - Path to navigate to (must start with `/` or '#/')\n * @return {Promise} Promise that resolves after the page navigation has completed\n */\nexport function replace(location) {\n    if (!location || location.length < 1 || (location.charAt(0) != '/' && location.indexOf('#/') !== 0)) {\n        throw Error('Invalid parameter location')\n    }\n\n    // Execute this code when the current call stack is complete\n    return tick().then(() => {\n        const dest = (location.charAt(0) == '#' ? '' : '#') + location\n        try {\n            window.history.replaceState(undefined, undefined, dest)\n        }\n        catch (e) {\n            // eslint-disable-next-line no-console\n            console.warn('Caught exception while replacing the current page. If you\\'re running this in the Svelte REPL, please note that the `replace` method might not work in this environment.')\n        }\n\n        // The method above doesn't trigger the hashchange event, so let's do that manually\n        window.dispatchEvent(new Event('hashchange'))\n    })\n}\n\n/**\n * Svelte Action that enables a link element (`<a>`) to use our history management.\n *\n * For example:\n *\n * ````html\n * <a href=\"/books\" use:link>View books</a>\n * ````\n *\n * @param {HTMLElement} node - The target node (automatically set by Svelte). Must be an anchor tag (`<a>`) with a href attribute starting in `/`\n * @param {string} hrefVar - A string to use in place of the link's href attribute. Using this allows for updating link's targets reactively.\n */\nexport function link(node, hrefVar) {\n    // Only apply to <a> tags\n    if (!node || !node.tagName || node.tagName.toLowerCase() != 'a') {\n        throw Error('Action \"link\" can only be used with <a> tags')\n    }\n\n    updateLink(node, hrefVar || node.getAttribute('href'))\n\n    return {\n        update(updated) {\n            updateLink(node, updated)\n        }\n    }\n}\n\n// Internal function used by the link function\nfunction updateLink(node, href) {\n    // Destination must start with '/'\n    if (!href || href.length < 1 || href.charAt(0) != '/') {\n        throw Error('Invalid value for \"href\" attribute')\n    }\n\n    // Add # to the href attribute\n    node.setAttribute('href', '#' + href)\n}\n\n/**\n * Performs a callback in the next tick and returns a Promise that resolves once that's done\n *\n * @param {Function} cb - Callback to invoke\n * @returns {Promise} Promise that resolves after the callback has been invoked, with the return value of the callback (if any)\n * @deprecated Deprecated since version 2.2 and will be removed in version 3. Use `tick` from the Svelte runtime instead (`import {tick} from 'svelte'`).\n */\nexport function nextTickPromise(cb) {\n    // eslint-disable-next-line no-console\n    console.warn('nextTickPromise from \\'svelte-spa-router\\' is deprecated and will be removed in version 3; use the \\'tick\\' method from the Svelte runtime instead')\n    return tick().then(cb)\n}\n</script>\n\n{#if componentParams}\n  <svelte:component this=\"{component}\" params=\"{componentParams}\" on:routeEvent />\n{:else}\n  <svelte:component this=\"{component}\" on:routeEvent />\n{/if}\n\n<script>\nimport {createEventDispatcher} from 'svelte'\nimport regexparam from 'regexparam'\n\n/**\n * Dictionary of all routes, in the format `'/path': component`.\n *\n * For example:\n * ````js\n * import HomeRoute from './routes/HomeRoute.svelte'\n * import BooksRoute from './routes/BooksRoute.svelte'\n * import NotFoundRoute from './routes/NotFoundRoute.svelte'\n * routes = {\n *     '/': HomeRoute,\n *     '/books': BooksRoute,\n *     '*': NotFoundRoute\n * }\n * ````\n */\nexport let routes = {}\n\n/**\n * Optional prefix for the routes in this router. This is useful for example in the case of nested routers.\n */\nexport let prefix = ''\n\n/**\n * Container for a route: path, component\n */\nclass RouteItem {\n    /**\n     * Initializes the object and creates a regular expression from the path, using regexparam.\n     *\n     * @param {string} path - Path to the route (must start with '/' or '*')\n     * @param {SvelteComponent} component - Svelte component for the route\n     */\n    constructor(path, component) {\n        if (!component || (typeof component != 'function' && (typeof component != 'object' || component._sveltesparouter !== true))) {\n            throw Error('Invalid component object')\n        }\n\n        // Path must be a regular or expression, or a string starting with '/' or '*'\n        if (!path || \n            (typeof path == 'string' && (path.length < 1 || (path.charAt(0) != '/' && path.charAt(0) != '*'))) ||\n            (typeof path == 'object' && !(path instanceof RegExp))\n        ) {\n            throw Error('Invalid value for \"path\" argument')\n        }\n\n        const {pattern, keys} = regexparam(path)\n\n        this.path = path\n\n        // Check if the component is wrapped and we have conditions\n        if (typeof component == 'object' && component._sveltesparouter === true) {\n            this.component = component.route\n            this.conditions = component.conditions || []\n            this.userData = component.userData\n        }\n        else {\n            this.component = component\n            this.conditions = []\n            this.userData = undefined\n        }\n\n        this._pattern = pattern\n        this._keys = keys\n    }\n\n    /**\n     * Checks if `path` matches the current route.\n     * If there's a match, will return the list of parameters from the URL (if any).\n     * In case of no match, the method will return `null`.\n     *\n     * @param {string} path - Path to test\n     * @returns {null|Object.<string, string>} List of paramters from the URL if there's a match, or `null` otherwise.\n     */\n    match(path) {\n        // If there's a prefix, remove it before we run the matching\n        if (prefix && path.startsWith(prefix)) {\n            path = path.substr(prefix.length) || '/'\n        }\n\n        // Check if the pattern matches\n        const matches = this._pattern.exec(path)\n        if (matches === null) {\n            return null\n        }\n\n        // If the input was a regular expression, this._keys would be false, so return matches as is\n        if (this._keys === false) {\n            return matches\n        }\n\n        const out = {}\n        let i = 0\n        while (i < this._keys.length) {\n            out[this._keys[i]] = matches[++i] || null\n        }\n        return out\n    }\n\n    /**\n     * Dictionary with route details passed to the pre-conditions functions, as well as the `routeLoaded` and `conditionsFailed` events\n     * @typedef {Object} RouteDetail\n     * @property {SvelteComponent} component - Svelte component\n     * @property {string} name - Name of the Svelte component\n     * @property {string} location - Location path\n     * @property {string} querystring - Querystring from the hash\n     * @property {Object} [userData] - Custom data passed by the user\n     */\n\n    /**\n     * Executes all conditions (if any) to control whether the route can be shown. Conditions are executed in the order they are defined, and if a condition fails, the following ones aren't executed.\n     * \n     * @param {RouteDetail} detail - Route detail\n     * @returns {bool} Returns true if all the conditions succeeded\n     */\n    checkConditions(detail) {\n        for (let i = 0; i < this.conditions.length; i++) {\n            if (!this.conditions[i](detail)) {\n                return false\n            }\n        }\n\n        return true\n    }\n}\n\n// Set up all routes\nconst routesList = []\nif (routes instanceof Map) {\n    // If it's a map, iterate on it right away\n    routes.forEach((route, path) => {\n        routesList.push(new RouteItem(path, route))\n    })\n}\nelse {\n    // We have an object, so iterate on its own properties\n    Object.keys(routes).forEach((path) => {\n        routesList.push(new RouteItem(path, routes[path]))\n    })\n}\n\n// Props for the component to render\nlet component = null\nlet componentParams = null\n\n// Event dispatcher from Svelte\nconst dispatch = createEventDispatcher()\n\n// Just like dispatch, but executes on the next iteration of the event loop\nconst dispatchNextTick = (name, detail) => {\n    // Execute this code when the current call stack is complete\n    tick().then(() => {\n        dispatch(name, detail)\n    })\n}\n\n// Handle hash change events\n// Listen to changes in the $loc store and update the page\n$: {\n    // Find a route matching the location\n    component = null\n    let i = 0\n    while (!component && i < routesList.length) {\n        const match = routesList[i].match($loc.location)\n        if (match) {\n            const detail = {\n                component: routesList[i].component,\n                name: routesList[i].component.name,\n                location: $loc.location,\n                querystring: $loc.querystring,\n                userData: routesList[i].userData\n            }\n\n            // Check if the route can be loaded - if all conditions succeed\n            if (!routesList[i].checkConditions(detail)) {\n                // Trigger an event to notify the user\n                dispatchNextTick('conditionsFailed', detail)\n                break\n            }\n            component = routesList[i].component\n            // Set componentParams onloy if we have a match, to avoid a warning similar to `<Component> was created with unknown prop 'params'`\n            // Of course, this assumes that developers always add a \"params\" prop when they are expecting parameters\n            if (match && typeof match == 'object' && Object.keys(match).length) {\n                componentParams = match\n            }\n            else {\n                componentParams = null\n            }\n\n            dispatchNextTick('routeLoaded', detail)\n        }\n        i++\n    }\n}\n</script>\n","export default function (str, loose) {\n\tif (str instanceof RegExp) return { keys:false, pattern:str };\n\tvar c, o, tmp, ext, keys=[], pattern='', arr = str.split('/');\n\tarr[0] || arr.shift();\n\n\twhile (tmp = arr.shift()) {\n\t\tc = tmp[0];\n\t\tif (c === '*') {\n\t\t\tkeys.push('wild');\n\t\t\tpattern += '/(.*)';\n\t\t} else if (c === ':') {\n\t\t\to = tmp.indexOf('?', 1);\n\t\t\text = tmp.indexOf('.', 1);\n\t\t\tkeys.push( tmp.substring(1, !!~o ? o : !!~ext ? ext : tmp.length) );\n\t\t\tpattern += !!~o && !~ext ? '(?:/([^/]+?))?' : '/([^/]+?)';\n\t\t\tif (!!~ext) pattern += (!!~o ? '?' : '') + '\\\\' + tmp.substring(ext);\n\t\t} else {\n\t\t\tpattern += '/' + tmp;\n\t\t}\n\t}\n\n\treturn {\n\t\tkeys: keys,\n\t\tpattern: new RegExp('^' + pattern + (loose ? '(?=$|\\/)' : '\\/?$'), 'i')\n\t};\n}\n","<script lang=\"ts\">\r\n  import { link } from \"svelte-spa-router\";\r\n  import type { Contributor } from \"./types/general\";\r\n\r\n  export let puzzleName = \"\";\r\n  export let puzzleHelp = \"\";\r\n  export let contributor: Contributor = null;\r\n</script>\r\n\r\n<header>\r\n  <h1>{puzzleName}</h1>\r\n  <nav>\r\n    <a href=\"/\" use:link>back to menu</a>\r\n  </nav>\r\n  {#if puzzleHelp.length > 0}\r\n  <div>\r\n    <span>💡</span>\r\n    <p>{puzzleHelp}</p>\r\n  </div>\r\n  {/if}\r\n  {#if contributor != null}\r\n    <p id=\"contributor\">made by <a href=\"{contributor.link}\" target=\"_blank\">{contributor.name}</a></p>\r\n  {/if}\r\n</header>\r\n<hr>\r\n\r\n<style>\r\n  hr {\r\n    border: 1px solid lightgrey;\r\n  }\r\n  header {\r\n    min-width: 500px;\r\n    max-width: 1000px;\r\n    position: relative;\r\n  }\r\n  h1 {\r\n    text-align: center;\r\n    margin-bottom: 35px;\r\n  }\r\n  nav {\r\n    position: absolute;\r\n    top: 13px;\r\n    left: 25px\r\n  }\r\n  div {\r\n    width: 85%;\r\n    margin: 20px auto;\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n  span {\r\n    margin-right: 20px;\r\n    font-size: 1.5em;\r\n  }\r\n  p {\r\n    font-style: italic;\r\n    margin: 0;\r\n  }\r\n  #contributor {\r\n    font-size: 0.9em;\r\n    text-align: right;\r\n  }\r\n</style>\r\n","<script>\r\n\timport { onMount } from 'svelte';\r\n\r\n\tlet characters = ['🥳', '🎉', '✨'];\r\n\r\n\tlet confetti = new Array(100).fill()\r\n\t\t.map((_, i) => {\r\n\t\t\treturn {\r\n\t\t\t\tcharacter: characters[i % characters.length],\r\n\t\t\t\tx: Math.random() * 100,\r\n\t\t\t\ty: -20 - Math.random() * 100,\r\n\t\t\t\tr: 0.1 + Math.random() * 1\r\n\t\t\t};\r\n\t\t})\r\n\t\t.sort((a, b) => a.r - b.r);\r\n\r\n\tonMount(() => {\r\n\t\tlet frame;\r\n\r\n\t\tfunction loop() {\r\n\t\t\tframe = requestAnimationFrame(loop);\r\n\r\n\t\t\tconfetti = confetti.map(emoji => {\r\n\t\t\t\temoji.y += 0.7 * emoji.r;\r\n\t\t\t\tif (emoji.y > 120) emoji.y = -20;\r\n\t\t\t\treturn emoji;\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tloop();\r\n\r\n\t\treturn () => cancelAnimationFrame(frame);\r\n\t});\r\n</script>\r\n\r\n<style>\r\n\t:global(body) {\r\n\t\toverflow: hidden;\r\n\t}\r\n\r\n\tspan {\r\n\t\tposition: absolute;\r\n\t\tfont-size: 5vw;\r\n\t}\r\n</style>\r\n\r\n{#each confetti as c}\r\n\t<span style=\"left: {c.x}%; top: {c.y}%; transform: scale({c.r}); zIndex: 1000\">{c.character}</span>\r\n{/each}","<script lang=\"ts\">\r\n\timport { onMount } from \"svelte\";\r\n\timport PuzzleHeader from \"../puzzleHeader.svelte\";\r\n\timport Celebration from \"../Celebration.svelte\";\r\n\r\n\tconst help = `\r\n\t\tClick on a tile next to the empty field in the grid to move it to the empty space.\r\n\t\tThe energy has to flow from the upper left to the bottom right.\r\n\t\tIt can only flow to the next tile in the direction of the tiny \"arrow\" on the tiles.\r\n\t`;\r\n\r\n\tlet isSolved: Boolean = false;\r\n\r\n\tfunction handleClick(e: MouseEvent) {\r\n\t\tconst empty: HTMLElement = document.querySelector('.tile-empty');\r\n\t\tconst emptyId: number = parseInt(empty.id.split('-')[1]);\r\n\t\tconst el = e.target as HTMLElement;\r\n\t\tconst elId: number = parseInt(el.id.split('-')[1]);\r\n\r\n\t\tif (\r\n\t\t\telId + 1 === emptyId ||\r\n\t\t\telId - 1 === emptyId ||\r\n\t\t\telId + 5 === emptyId ||\r\n\t\t\telId - 5 === emptyId\r\n\t\t) {\r\n\t\t\tconst elClass: string = Array.from(el.classList)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t .find(cl => cl.startsWith('tile-'));\r\n\t\t\tempty.classList.toggle('tile-empty');\r\n\t\t\tempty.classList.toggle(elClass);\r\n\t\t\tel.classList.toggle(elClass);\r\n\t\t\tel.classList.toggle('tile-empty');\r\n\t\t}\r\n\t\tcalcEnergy();\r\n\t}\r\n\r\n\tfunction calcEnergy() {\r\n\t\t// remove all \"energized\" classes\r\n\t\tfor (const tile of document.querySelectorAll('div.tile').entries()) {\r\n\t\t\ttile[1].classList.remove('energized');\r\n\t\t}\r\n\r\n\t\t// starting from 1st tile, follow route\r\n\t\tconst first = document.querySelector('#tile-1') as HTMLElement;\r\n\t\tfirst.classList.add('energized');\r\n\t\tcalcNextEnergizedTile(first);\r\n\r\n\t\t// check if end is energized\r\n\t\tconst last = document.getElementById('tile-25');\r\n    const end = document.getElementById('tile-end');\r\n    if (last.classList.contains('tile-right') && last.classList.contains('energized')) {\r\n\t\t\tend.classList.add('energized');\r\n\t\t\tisSolved = true;\r\n    } else {\r\n\t\t\tend.classList.remove('energized');\r\n\t\t\tisSolved = false;\r\n    }\r\n\t}\r\n\r\n\tfunction calcNextEnergizedTile(tile: HTMLElement) {\r\n\t\tconst tileClass: string = Array.from(tile.classList)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t .find(cl => cl.startsWith('tile-'));\r\n\t\tconst tileId: number = parseInt(tile.id.split('-')[1]);\r\n\t\tlet nextTile: HTMLElement = null\r\n\t\tswitch (tileClass) {\r\n\t\t\tcase 'tile-up': {\r\n\t\t\t\t// if tile is in top row, end chain\r\n\t\t\t\tif (tileId > 5) {\r\n\t\t\t\t\t// get tile above\r\n\t\t\t\t\tnextTile = document.querySelector('#tile-' + (tileId - 5)) as HTMLElement;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase 'tile-right': {\r\n\t\t\t\t// if tile is on the right end of the grid, end chain\r\n\t\t\t\tif (tileId % 5 !== 0) {\r\n\t\t\t\t\t// get tile to the right\r\n\t\t\t\t\tnextTile = document.querySelector('#tile-' + (tileId + 1)) as HTMLElement;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase 'tile-down': {\r\n\t\t\t\t// if tile is in the bottom row, end chain\r\n\t\t\t\tif (tileId < 21) {\r\n\t\t\t\t\t// get tile below\r\n\t\t\t\t\tnextTile = document.querySelector('#tile-' + (tileId + 5)) as HTMLElement;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase 'tile-left': {\r\n\t\t\t\t// if tile is on the left end of the grid, end chain\r\n\t\t\t\tif (tileId % 5 !== 1) {\r\n\t\t\t\t\t// get tile to the left\r\n\t\t\t\t\tnextTile = document.querySelector('#tile-' + (tileId - 1)) as HTMLElement;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (nextTile != null && !nextTile.classList.contains('energized')) {\r\n\t\t\tnextTile.classList.add('energized');\r\n\t\t\tcalcNextEnergizedTile(nextTile);\r\n\t\t}\r\n\t}\r\n\r\n\tonMount(async () => {\r\n\t\tcalcEnergy();\r\n\t});\r\n</script>\r\n\r\n<PuzzleHeader puzzleName={\"Honnleath\"} puzzleHelp={help} />\r\n<section>\r\n\t<div id=\"grid-wrapper\">\r\n\t\t<div id=\"tile-start\" class=\"energized\"></div>\r\n\t\t<div id=\"grid\">\r\n\t\t\t<div class=\"row\">\r\n\t\t\t\t<div class=\"tile tile-right\" id=\"tile-1\" on:click={handleClick}></div>\r\n\t\t\t\t<div class=\"tile tile-down\" id=\"tile-2\" on:click={handleClick}></div>\r\n\t\t\t\t<div class=\"tile tile-up\" id=\"tile-3\" on:click={handleClick}></div>\r\n\t\t\t\t<div class=\"tile tile-left\" id=\"tile-4\" on:click={handleClick}></div>\r\n\t\t\t\t<div class=\"tile tile-up\" id=\"tile-5\" on:click={handleClick}></div>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"row\">\r\n\t\t\t\t<div class=\"tile tile-empty\" id=\"tile-6\" on:click={handleClick}></div>\r\n\t\t\t\t<div class=\"tile tile-right\" id=\"tile-7\" on:click={handleClick}></div>\r\n\t\t\t\t<div class=\"tile tile-up\" id=\"tile-8\" on:click={handleClick}></div>\r\n\t\t\t\t<div class=\"tile tile-down\" id=\"tile-9\" on:click={handleClick}></div>\r\n\t\t\t\t<div class=\"tile tile-left\" id=\"tile-10\" on:click={handleClick}></div>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"row\">\r\n\t\t\t\t<div class=\"tile tile-up\" id=\"tile-11\" on:click={handleClick}></div>\r\n\t\t\t\t<div class=\"tile tile-up\" id=\"tile-12\" on:click={handleClick}></div>\r\n\t\t\t\t<div class=\"tile tile-left\" id=\"tile-13\" on:click={handleClick}></div>\r\n\t\t\t\t<div class=\"tile tile-right\" id=\"tile-14\" on:click={handleClick}></div>\r\n\t\t\t\t<div class=\"tile tile-up\" id=\"tile-15\" on:click={handleClick}></div>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"row\">\r\n\t\t\t\t<div class=\"tile tile-down\" id=\"tile-16\" on:click={handleClick}></div>\r\n\t\t\t\t<div class=\"tile tile-down\" id=\"tile-17\" on:click={handleClick}></div>\r\n\t\t\t\t<div class=\"tile tile-right\" id=\"tile-18\" on:click={handleClick}></div>\r\n\t\t\t\t<div class=\"tile tile-left\" id=\"tile-19\" on:click={handleClick}></div>\r\n\t\t\t\t<div class=\"tile tile-right\" id=\"tile-20\" on:click={handleClick}></div>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"row\">\r\n\t\t\t\t<div class=\"tile tile-left\" id=\"tile-21\" on:click={handleClick}></div>\r\n\t\t\t\t<div class=\"tile tile-down\" id=\"tile-22\" on:click={handleClick}></div>\r\n\t\t\t\t<div class=\"tile tile-down\" id=\"tile-23\" on:click={handleClick}></div>\r\n\t\t\t\t<div class=\"tile tile-right\" id=\"tile-24\" on:click={handleClick}></div>\r\n\t\t\t\t<div class=\"tile tile-left\" id=\"tile-25\" on:click={handleClick}></div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<div id=\"tile-end\"></div>\r\n\t</div>\r\n\t{#if isSolved === true}\r\n\t\t<Celebration />\r\n\t{/if}\r\n</section>\r\n\r\n<style>\r\n\t/* @todo get rid of global-styles */\r\n\tsection {\r\n\t\tmargin-top: 50px;\r\n\t\tmin-width: 830px;\r\n\t}\r\n\t#grid-wrapper {\r\n\t\twidth: 830px;\r\n\t\theight: 580px;\r\n\t\tmargin: 0 auto;\r\n\t\tposition: relative;\r\n\t}\r\n\t#grid {\r\n\t\twidth: 600px;\r\n\t\tmargin: 0 auto;\r\n\t}\r\n\t.row {\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: space-evenly;\r\n\t\tmargin: 15px 0;\r\n\t}\r\n\t.tile {\r\n\t\theight: 100px;\r\n\t\twidth: 100px;\r\n\t\toutline: 1px solid grey;\r\n\t}\r\n\t.tile-empty {\r\n\t\topacity: 0;\r\n\t}\r\n\t.tile-left {\r\n\t\tbackground: url('/assets/honnleath/tile-left.png');\r\n\t}\r\n\t:global(.tile-left.energized) {\r\n\t\tbackground: url('/assets/honnleath/energy.png') no-repeat center, url('/assets/honnleath/tile-left.png');\r\n\t}\r\n\t.tile-right {\r\n\t\tbackground: url('/assets/honnleath/tile-right.png');\r\n\t}\r\n\t:global(.tile-right.energized) {\r\n\t\tbackground: url('/assets/honnleath/energy.png') no-repeat center, url('/assets/honnleath/tile-right.png');\r\n\t}\r\n\t.tile-up {\r\n\t\tbackground: url('/assets/honnleath/tile-up.png');\r\n\t}\r\n\t:global(.tile-up.energized) {\r\n\t\tbackground: url('/assets/honnleath/energy.png') no-repeat center, url('/assets/honnleath/tile-up.png');\r\n\t}\r\n\t.tile-down {\r\n\t\tbackground: url('/assets/honnleath/tile-down.png');\r\n\t}\r\n\t:global(.tile-down.energized) {\r\n\t\tbackground: url('/assets/honnleath/energy.png') no-repeat center, url('/assets/honnleath/tile-down.png');\r\n\t}\r\n\t#tile-start, #tile-end {\r\n\t\theight: 100px;\r\n\t\twidth: 100px;\r\n\t\tbackground: url('/assets/honnleath/tile-end.png');\r\n\t\tposition: absolute;\r\n\t}\r\n\t#tile-start {\r\n\t\ttop: 0;\r\n\t\tleft: 10px;\r\n\t}\r\n\t#tile-end {\r\n\t\tbottom: 20px;\r\n\t\tright: 10px;\r\n\t}\r\n\t#tile-start.energized, :global(#tile-end.energized) {\r\n\t\tbackground: url('/assets/honnleath/energy.png') no-repeat center, url('/assets/honnleath/tile-end.png');\r\n\t}\r\n</style>\r\n","<script lang=\"ts\">\r\n  import PuzzleHeader from \"../puzzleHeader.svelte\";\r\n  import Celebration from \"../Celebration.svelte\";\r\n\r\n  type Anagram = {\r\n    solution: string, // capitalized passcode\r\n    letters: string[]  // array of letters in starting order\r\n    space: number  // index; before this letter, there should be a space\r\n  }\r\n  type AnagramListEntry = {\r\n    anagram: Anagram,\r\n    icon: string,\r\n    alt: string\r\n  }\r\n\r\n  const help: string = `\r\n    Choose your anagram by clicking on an icon; to solve it select the letters\r\n    in the right order to find the passcode. You're looking for a single english word.\r\n  `;\r\n\r\n  const door: Anagram = {\r\n    solution: 'ENTRANCE',\r\n    letters: ['E', 'A', 'R', 'N', 'C', 'E', 'N', 'T'],\r\n    space: 4\r\n  };\r\n  const chest: Anagram = {\r\n    solution: 'TREASURE',\r\n    letters: ['U', 'S', 'E', 'T', 'E', 'R', 'R', 'A'],\r\n    space: 3\r\n  };\r\n  const trap: Anagram = {\r\n    solution: 'TRICKSTER',\r\n    letters: ['C', 'R', 'T', 'S', 'T', 'R', 'I', 'K', 'E'],\r\n    space: 3\r\n  };\r\n\r\n  const anagrams: AnagramListEntry[] = [\r\n    {anagram: door, icon: 'barred-door.png', alt: 'icon of a barred double door'},\r\n    {anagram: chest, icon: 'treasure-chest.png', alt:'icon of an open treasure chest with coins, a crown and a necklace'},\r\n    {anagram: trap, icon: 'box-trap.png', alt:'icon of a box trap'}\r\n  ];\r\n\r\n  let anagram: Anagram = null;\r\n  let guess: number[] = [];\r\n  let isSolved: Boolean = false;\r\n\r\n  function handleStartClick(e: MouseEvent) {\r\n    const card = (e.target as HTMLElement);\r\n    const dataValue = parseInt(card.attributes['data-value'].value);\r\n    const isUsed = card.classList.toggle('used');\r\n    if (isUsed) {\r\n      guess = [...guess, dataValue];\r\n      if (guess.length === anagram.letters.length) {\r\n        let word: string = \"\";\r\n        for (var letter of guess) {\r\n          word += anagram.letters[letter];\r\n        }\r\n        if (word === anagram.solution) {\r\n          isSolved = true;\r\n        } else {\r\n          isSolved = false;\r\n          document.getElementById('solution').classList.add('shake');\r\n        }\r\n      }\r\n    } else {\r\n      guess = guess.filter((index) => index !== dataValue);\r\n      isSolved = false;\r\n      document.getElementById('solution').classList.remove('shake');\r\n    }\r\n  }\r\n\r\n  function handleSelectionClick(e: MouseEvent) {\r\n    const icon = (e.target as HTMLElement).parentElement;\r\n    const dataIndex = parseInt(icon.attributes['data-index'].value);\r\n\r\n    anagram = anagrams[dataIndex].anagram;\r\n  }\r\n\r\n  function handleBackClick() {\r\n    anagram = null;\r\n    guess = [];\r\n    isSolved = false;\r\n  }\r\n</script>\r\n\r\n<PuzzleHeader puzzleName={\"Anagram\"} puzzleHelp={help} />\r\n<section>\r\n  {#if anagram === null}\r\n    <div>\r\n      {#each anagrams as puzzle, i}\r\n        <span data-index={i}\r\n              class=\"selection\"\r\n              on:click={handleSelectionClick}>\r\n          <img src=\"/assets/anagram/{puzzle.icon}\" alt=\"{puzzle.alt}\">\r\n        </span>\r\n      {/each}\r\n    </div>\r\n    <p class=\"copyright\">\r\n      Icons made by <a href=\"http://delapouite.com\" target=\"_blank\">Delapouite</a>\r\n      & <a href=\"https://game-icons.net\" target=\"_blank\">Skoll</a>.\r\n      Available on <a href=\"https://game-icons.net\" target=\"_blank\">game-icons.net</a>.\r\n    </p>\r\n  {:else}\r\n    <p on:click={handleBackClick}\r\n          id=\"back\">back to selection</p>\r\n    <div>\r\n      {#each anagram.letters as letter, i}\r\n        {#if i === anagram.space}\r\n          <span class=\"space\"></span>\r\n        {/if}\r\n        <span class=\"start\"\r\n              on:click={handleStartClick}\r\n              data-value={i}>{letter}</span>\r\n      {/each}\r\n    </div>\r\n    <div id=\"solution\">\r\n      {#each guess as index}\r\n        <span>{anagram.letters[index]}</span>\r\n      {/each}\r\n    </div>\r\n    {#if isSolved === true}\r\n      <Celebration />\r\n    {/if}\r\n  {/if}\r\n</section>\r\n\r\n<style>\r\n  section {\r\n    margin-top: 50px;\r\n  }\r\n  section>div {\r\n    display: flex;\r\n    justify-content: center;\r\n  }\r\n  .selection {\r\n    margin: 10px;\r\n    cursor: pointer;\r\n  }\r\n  .selection>img {\r\n    width: 150px;\r\n    height: 150px;\r\n  }\r\n  .copyright {\r\n    text-align: center;\r\n    margin-top: 50px;\r\n    font-size: 0.9em;\r\n  }\r\n  .space {\r\n    width: 50px;\r\n  }\r\n  .start {\r\n    padding: 25px 20px;\r\n    border: 1px solid lightgrey;\r\n    margin: 0 5px;\r\n    cursor: pointer;\r\n  }\r\n  :global(.used) {\r\n    background: lightgrey;\r\n  }\r\n  #solution {\r\n    margin-top: 50px;\r\n    font-size: 2em;\r\n  }\r\n  #back {\r\n    margin: 0 0 50px 25px;\r\n    color: rgb(0,80,160);\r\n    cursor: pointer;\r\n  }\r\n  #back:hover {\r\n    text-decoration: underline;\r\n  }\r\n  :global(.shake) {\r\n    -webkit-animation-name: shake;\r\n    animation-name: shake;\r\n    -webkit-animation-duration: 1s;\r\n    animation-duration: 1s;\r\n    -webkit-animation-fill-mode: both;\r\n    animation-fill-mode: both;\r\n  }\r\n  @-webkit-keyframes shake {\r\n    0%, 100% {\r\n      -webkit-transform: translate3d(0, 0, 0);\r\n      transform: translate3d(0, 0, 0);\r\n    }\r\n    10%, 30%, 50%, 70%, 90% {\r\n      -webkit-transform: translate3d(-10px, 0, 0);\r\n      transform: translate3d(-10px, 0, 0);\r\n    }\r\n    20%, 40%, 60%, 80% {\r\n      -webkit-transform: translate3d(10px, 0, 0);\r\n      transform: translate3d(10px, 0, 0);\r\n    }\r\n  }\r\n  @keyframes shake {\r\n    0%, 100% {\r\n      -webkit-transform: translate3d(0, 0, 0);\r\n      transform: translate3d(0, 0, 0);\r\n    }\r\n    10%, 30%, 50%, 70%, 90% {\r\n      -webkit-transform: translate3d(-10px, 0, 0);\r\n      transform: translate3d(-10px, 0, 0);\r\n    }\r\n    20%, 40%, 60%, 80% {\r\n      -webkit-transform: translate3d(10px, 0, 0);\r\n      transform: translate3d(10px, 0, 0);\r\n    }\r\n  }\r\n</style>\r\n","<script lang=\"ts\">\r\n  import { onDestroy } from 'svelte';\r\n  import PuzzleHeader from \"../puzzleHeader.svelte\";\r\n  import Celebration from \"../Celebration.svelte\";\r\n\r\n  enum Direction {\r\n\t\tUp = 0,\r\n\t\tRight = 1,\r\n\t\tDown = 2,\r\n\t\tLeft = 3,\r\n\t}\r\n\r\n  const help: string = `\r\n    The arrows on the valves need to look into the right direction, turn each to face in its intended direction.\r\n    Turn a valve by clicking on it; each click will turn a valve for 90°.\r\n  `;\r\n\r\n  const valves: Direction[] = [3, 3, 3, 3, 3, 3, 3, 3];\r\n  const solution: Direction[] = [0, 0, 2, 2, 3, 1, 3, 1];\r\n  let isSolved: Boolean = false;\r\n\r\n  function handleClick(e: MouseEvent) {\r\n    const el = e.target as HTMLElement;\r\n    const index = el.parentElement.attributes['data-value'].value;\r\n    switch(valves[index]) {\r\n      case Direction.Up:\r\n        valves[index] = Direction.Right;\r\n        break;\r\n      case Direction.Right:\r\n        valves[index] = Direction.Down;\r\n        break;\r\n      case Direction.Down:\r\n        valves[index] = Direction.Left;\r\n        break;\r\n      case Direction.Left:\r\n        valves[index] = Direction.Up;\r\n        break;\r\n    }\r\n\r\n    if(JSON.stringify(valves) == JSON.stringify(solution)) {\r\n      isSolved = true;\r\n    } else {\r\n      isSolved = false;\r\n    }\r\n  }\r\n\r\n</script>\r\n\r\n<PuzzleHeader puzzleName={\"Valves\"} puzzleHelp={help} />\r\n<section>\r\n  <div id=\"valves\">\r\n    {#each valves as valve, i}\r\n      <div on:click={handleClick}\r\n          data-value={i}>\r\n        <img src=\"/assets/valves/ventil.png\"\r\n             alt=\"silver-grey valve with 4 handles\" />\r\n        <img src=\"/assets/valves/marker.png\"\r\n             alt=\"blue arrow marking on of the ventil's handles\"\r\n             class={'turn-' + valve} />\r\n        <span>{i + 1}</span>\r\n      </div>\r\n    {/each}\r\n  </div>\r\n  {#if isSolved === true}\r\n\t\t<Celebration />\r\n\t{/if}\r\n</section>\r\n\r\n<style>\r\n  #valves > div {\r\n    display: inline-block;\r\n    width: 250px;\r\n    height: 250px;\r\n    position: relative;\r\n  }\r\n  #valves img {\r\n    position: absolute;\r\n    left: 5px;\r\n    top: 5px;\r\n    width: 240px;\r\n  }\r\n  #valves span {\r\n    position: absolute;\r\n    left: 121px;\r\n    top: 113px;\r\n    font-weight: bold;\r\n  }\r\n\r\n  .turn-1 {\r\n    -webkit-transform: rotate(90deg);\r\n    -moz-transform: rotate(90deg);\r\n    -o-transform: rotate(90deg);\r\n    -ms-transform: rotate(90deg);\r\n    transform: rotate(90deg);\r\n  }\r\n  .turn-2 {\r\n    -webkit-transform: rotate(180deg);\r\n    -moz-transform: rotate(180deg);\r\n    -o-transform: rotate(180deg);\r\n    -ms-transform: rotate(180deg);\r\n    transform: rotate(180deg);\r\n  }\r\n  .turn-3 {\r\n    -webkit-transform: rotate(270deg);\r\n    -moz-transform: rotate(270deg);\r\n    -o-transform: rotate(270deg);\r\n    -ms-transform: rotate(1270deg);\r\n    transform: rotate(270deg);\r\n  }\r\n</style>\r\n","export function shuffleArray(array) {\r\n  let m = array.length, t, i;\r\n\r\n  // While there remain elements to shuffle…\r\n  while (m) {\r\n\r\n    // Pick a remaining element…\r\n    i = Math.floor(Math.random() * m--);\r\n\r\n    // And swap it with the current element.\r\n    t = array[m];\r\n    array[m] = array[i];\r\n    array[i] = t;\r\n  }\r\n\r\n  return array;\r\n}","<script lang=\"ts\">\r\n  import { onDestroy } from 'svelte';\r\n  import PuzzleHeader from \"../puzzleHeader.svelte\";\r\n  import Celebration from \"../Celebration.svelte\";\r\n  import { shuffleArray } from \"../utils/fisher-yates-shuffle\";\r\n  import { getRndInteger } from \"../utils/randomInt\";\r\n\r\n  const help = `\r\n    There are seven discs; on top of each disc is a cover with a small hole\r\n    in it. Underneath you can see through to the base of the disc. Each disc\r\n    is engraved with six letters. Turn the covers of the discs to reveal a\r\n    specific word. But be warned, even though it's possible to build several\r\n    word, the lock only accepts one specific word.\r\n    Turn a lid by clicking on a disc. The lids can only be turned clockwise.\r\n  `;\r\n\r\n  let isSolved: Boolean = false;\r\n  let isError: Boolean = false;\r\n  let to = null;\r\n\r\n  type Discs = {\r\n    disc1?: string[];\r\n    disc2?: string[];\r\n    disc3?: string[];\r\n    disc4?: string[];\r\n    disc5?: string[];\r\n    disc6?: string[];\r\n    disc7?: string[];\r\n  }\r\n\r\n  const words: string[] = [\r\n    \"justice\",\r\n    \"accused\",\r\n    \"evident\",\r\n    \"suspect\",\r\n    \"devoted\",\r\n    \"closure\"\r\n  ];\r\n  let actives: number[] = [];\r\n  let discs: Discs = {};\r\n  for (let discIndex = 0; discIndex < 7; discIndex++) {\r\n    const discBuffer = [];\r\n    for (let wordIndex = 0; wordIndex < words.length; wordIndex++) {\r\n      discBuffer.push(words[wordIndex].charAt(discIndex).toUpperCase());\r\n    }\r\n    discs[`disc${discIndex + 1}`] = shuffleArray(discBuffer);\r\n    actives = [...actives, getRndInteger(0, 5)];\r\n  }\r\n\r\n  function handleDiscClick(discIndex) {\r\n    actives[discIndex] = actives[discIndex] === 5 ? 0 : actives[discIndex] + 1;\r\n  }\r\n  function solve() {\r\n    let word = '';\r\n    for (let index = 0; index < actives.length; index++) {\r\n      word += discs[`disc${index + 1}`][actives[index]];\r\n    }\r\n    if (word === words[0].toUpperCase()) {\r\n      isSolved = true;\r\n    } else {\r\n      isSolved = false;\r\n      isError = true;\r\n      to = setTimeout(() => {\r\n        isError = false;\r\n        clearTimeout(to);\r\n        to = null;\r\n      }, 350);\r\n    }\r\n  }\r\n\r\n  onDestroy(() => {\r\n\t\tclearTimeout(to);\r\n    to = null;\r\n\t});\r\n</script>\r\n\r\n<PuzzleHeader puzzleName={\"Word Discs\"} puzzleHelp={help} />\r\n<section>\r\n  {#if isError === true}\r\n    <div id=\"error\">\r\n      <p>WRONG!</p>\r\n    </div>\r\n  {/if}\r\n  <div id=\"word-discs\">\r\n    {#each Object.entries(discs) as [key, value], i}\r\n      <div class=\"disc-base\" on:click={() => {handleDiscClick(i)}}>\r\n        {#each value as letter, j}\r\n          <span class:active={j === actives[i]}>{letter}</span>\r\n        {/each}\r\n      </div>\r\n      {/each}\r\n  </div>\r\n  <button on:click={solve}>activate</button>\r\n  {#if isSolved === true}\r\n\t\t<Celebration />\r\n\t{/if}\r\n</section>\r\n\r\n<style>\r\n  section {\r\n    position: relative;\r\n  }\r\n  #error {\r\n    z-index: 1;\r\n    background-color: orange;\r\n    position: absolute;\r\n    height: 400px;\r\n    width: 1000px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n  }\r\n  #error p {\r\n    font-size: 10em;\r\n    margin: 0;\r\n  }\r\n  #word-discs {\r\n    display: flex;\r\n    align-items: center;\r\n    flex-direction: column;\r\n    flex-wrap: wrap;\r\n    height: 400px;\r\n    gap: 0 40px;\r\n  }\r\n  .disc-base {\r\n    width: 200px;\r\n    height: 200px;\r\n    background-color: darkcyan;\r\n    border-radius: 100%;\r\n    position: relative;\r\n    display: inline-block;\r\n    user-select: none;\r\n    cursor: pointer;\r\n  }\r\n  .disc-base:nth-of-type(2), .disc-base:nth-of-type(4), .disc-base:nth-of-type(6) {\r\n    position: relative;\r\n    top: -30px;\r\n    left: 130px;\r\n  }\r\n  .disc-base span {\r\n    position: absolute;\r\n    font-size: 2em;\r\n    width: 1.5em;\r\n    height: 1.5em;\r\n    text-align: center;\r\n    border-radius: 100%;\r\n    visibility: hidden;\r\n  }\r\n  .disc-base span:first-of-type {\r\n    left: 75px;\r\n    top: 5px;\r\n  }\r\n  .disc-base span:nth-of-type(2) {\r\n    right: 20px;\r\n    top: 40px;\r\n  }\r\n  .disc-base span:nth-of-type(3) {\r\n    right: 20px;\r\n    bottom: 45px;\r\n  }\r\n  .disc-base span:nth-of-type(4) {\r\n    left: 75px;\r\n    bottom: 10px;\r\n  }\r\n  .disc-base span:nth-of-type(5) {\r\n    left: 20px;\r\n    bottom: 45px;\r\n  }\r\n  .disc-base span:last-of-type {\r\n    left: 20px;\r\n    top: 40px;\r\n  }\r\n  .disc-base span.active {\r\n    background-color: lightcyan;\r\n    visibility: visible;\r\n  }\r\n  button {\r\n    cursor: pointer;\r\n    display: block;\r\n    margin: 0 auto;\r\n    padding: 15px 25px;\r\n    margin-top: 50px;\r\n  }\r\n</style>","export function getRndInteger(min, max) {\r\n  return Math.floor(Math.random() * (max - min + 1) ) + min;\r\n}","<script lang=\"ts\">\r\n  import { link } from \"svelte-spa-router\";\r\n\r\n  function toggleInfo(id: string) {\r\n    const el = document.getElementById(id);\r\n    if (el.style.display === \"none\") {\r\n      el.style.display = \"block\";\r\n    } else {\r\n      el.style.display = \"none\";\r\n    }\r\n  }\r\n</script>\r\n\r\n<header>\r\n  <h1>GM Cheatsheet</h1>\r\n  <nav>\r\n    <a href=\"/\" use:link>back to menu</a>\r\n  </nav>\r\n  <p>Hello there, fellow GM!</p>\r\n  <p>Here you can find solutions, implementation ideas and difficulty ratings for the puzzles provided on this website. Click on a puzzle in the list to show/hide further information about it.</p>\r\n</header>\r\n<section>\r\n  <ul>\r\n    <li>\r\n      <div on:click=\"{() => toggleInfo(\"honnleath\")}\"\r\n           class=\"puzzle\">\r\n        <h2>Honnleath</h2>\r\n        <p class=\"info\">This puzzle was inspired by a puzzle in the video game Dragon Age Origins located in the village Honnleath.</p>\r\n      </div>\r\n      <div id=\"honnleath\"\r\n           class=\"info\"\r\n           style=\"display: none\">\r\n        <h3>Difficulty</h3>\r\n        <p>fairly easy to moderate</p>\r\n        <h3>Solution</h3>\r\n        <p>This puzzle can be solved in multiple ways. Here's one way to solve it:</p>\r\n        <ul>\r\n          <li>select the tile to the right of the empty space</li>\r\n          <li>select the tile to the bottom of the empty space</li>\r\n          <li>select the tile to the bottom of the empty space</li>\r\n          <li>select the tile to the bottom of the empty space</li>\r\n          <li>select the tile to the right of the empty space</li>\r\n          <li>select the tile to the top of the empty space</li>\r\n          <li>select the tile to the top of the empty space</li>\r\n          <li>select the tile to the top of the empty space</li>\r\n          <li>select the tile to the left of the empty space</li>\r\n          <li>select the tile to the bottom of the empty space</li>\r\n          <li>select the tile to the bottom of the empty space</li>\r\n          <li>select the tile to the bottom of the empty space</li>\r\n          <li>select the tile to the right of the empty space</li>\r\n          <li>select the tile to the right of the empty space</li>\r\n          <li>select the tile to the top of the empty space</li>\r\n          <li>select the tile to the right of the empty space</li>\r\n          <li>select the tile to the bottom of the empty space</li>\r\n          <li>select the tile to the left of the empty space</li>\r\n          <li>select the tile to the top of the empty space</li>\r\n          <li>select the tile to the top of the empty space</li>\r\n          <li>select the tile to the right of the empty space</li>\r\n          <li>select the tile to the bottom of the empty space</li>\r\n          <li>select the tile to the bottom of the empty space</li>\r\n          <li>select the tile to the left of the empty space</li>\r\n          <li>select the tile to the top of the empty space</li>\r\n        </ul>\r\n        <h3>Set it up</h3>\r\n        <p>You can use it as a locking mechanism for a chest, hidden compartment or similar things.</p>\r\n      </div>\r\n    </li>\r\n    <li>\r\n      <div on:click=\"{() => toggleInfo(\"anagram\")}\"\r\n           class=\"puzzle\">\r\n        <h2>Anagram</h2>\r\n      </div>\r\n      <div id=\"anagram\"\r\n           class=\"info\"\r\n           style=\"display: none\">\r\n        <h3>Difficulty</h3>\r\n        <p>moderate to challenging - this highly depends on the setup</p>\r\n        <h3>Solution</h3>\r\n        <ul>\r\n          <li>1 - barred door: ENTRANCE</li>\r\n          <li>2 - treasure chest: TREASURE</li>\r\n          <li>3 - box trap: TRICKSTER</li>\r\n        </ul>\r\n        <h3>Set it up</h3>\r\n        <ul>\r\n          <li>It could be a secret password that was mentioned in a letter like this.</li>\r\n          <li>You can use it as a locking mechanism for a door/chest/trap created by a (mad) mage.</li>\r\n        </ul>\r\n      </div>\r\n    </li>\r\n    <li>\r\n      <div on:click=\"{() => toggleInfo(\"valves\")}\"\r\n           class=\"puzzle\">\r\n        <h2>Valves</h2>\r\n        <p class=\"info\">This puzzle was inspired by <a href=\"https://www.youtube.com/watch?v=oawWOS1_qvg\" target=\"_blank\">Wally DM</a>.</p>\r\n      </div>\r\n      <div id=\"valves\"\r\n           class=\"info\"\r\n           style=\"display: none\">\r\n        <h3>Difficulty</h3>\r\n        <p>depending on the setup easy to difficult</p>\r\n        <h3>Solution</h3>\r\n        <p>The correct directions are those of the konami code: up, up, down, down, left, right, left, right</p>\r\n        <h3>Setup</h3>\r\n        <p>The valves regulate pipes that pump a gas of your choosing into a room the players are locked in or need to get something from. To not send them unprepared, you can let\r\n          them find a riddle or short story where they can find hints for the eight directions needed. In Wally DMs video you can find his suggestion for a short story, below you can\r\n          find the german story I provided my players with.</p>\r\n        <blockquote>\r\n          Es war einmal ein kleiner Vogel, der wollte <em>hoch</em> hinaus.<br>\r\n          Seine Flügel trugen ihn nach <em>oben</em>, über's Wolkendach herraus.<br>\r\n          Das Meer wollte er nun erkunden und so stieg er wieder <em>hinab</em>,<br>\r\n          verwandelte sich in einen Fisch und suchte die <em>Tiefen</em> der See ab.<br>\r\n          <br>\r\n          Erst durchschwamm er neugierig den gesamten <em>Westen</em>,<br>\r\n          dann schwamm er gen <em>Osten</em> um seine neuen Flossen zu testen.<br>\r\n          Von der Hexe ge<em>linkt</em>, blieb er ein Fischh, es gab kein Zurück;<br>\r\n          das war ihm nur <em>Recht</em>, was für ein großes Glück!\r\n        </blockquote>\r\n      </div>\r\n    </li>\r\n    <li>\r\n      <div on:click={() => toggleInfo(\"word-discs\")} class=\"puzzle\">\r\n        <h2>Word Discs</h2>\r\n        <div id=\"word-discs\" class=\"info\" style=\"display: none;\">\r\n          <h3>Difficulty</h3>\r\n          <p>Pretty hard, but highly depends on clues provided.</p>\r\n          <h3>Solution</h3>\r\n          <p>JUSTICE</p>\r\n          <h3>Set it up</h3>\r\n          <p>Use it as a locking mechanism; I designed it to lock magic-suppressing handcuffs to a mage. 😈</p>\r\n        </div>\r\n      </div>\r\n    </li>\r\n  </ul>\r\n</section>\r\n\r\n<style>\r\n  header {\r\n    position: relative;\r\n    min-width: 500px;\r\n  }\r\n  h1 {\r\n    text-align: center;\r\n    margin-bottom: 35px;\r\n  }\r\n  nav {\r\n    position: absolute;\r\n    top: 13px;\r\n    /*left: 25px*/\r\n  }\r\n  section {\r\n    max-height: 75vh;\r\n    overflow-y: scroll;\r\n  }\r\n  .puzzle {\r\n    cursor: pointer;\r\n  }\r\n  h2 {\r\n    margin-bottom: 5px;\r\n    font-size: 1.2em;\r\n  }\r\n  p.info {\r\n    margin: 0;\r\n    font-style: italic;\r\n  }\r\n  h3 {\r\n    font-size: 1em;\r\n  }\r\n  div.info {\r\n    border: 1px solid darkgray;\r\n    padding: 0 15px 15px;\r\n    margin-top: 15px;\r\n  }\r\n  div.info p:last-child {\r\n    margin-bottom: 0;\r\n  }\r\n  blockquote {\r\n    margin: 25px 0 10px 25px;\r\n    padding-left: 15px;\r\n    border-left: 10px solid lightblue;\r\n  }\r\n</style>","import Menu from './Menu.svelte';\r\nimport Honnleath from './puzzles/Honnleath.svelte';\r\nimport Anagram from './puzzles/Anagram.svelte';\r\nimport Valves from './puzzles/Valves.svelte';\r\nimport WordDiscs from './puzzles/WordDiscs.svelte';\r\nimport GmCheatSheet from './GmCheatSheet.svelte';\r\n\r\nconst routes = {\r\n  \"/\": Menu,\r\n  \"/honnleath\": Honnleath,\r\n  \"/anagram\": Anagram,\r\n  \"/valves\": Valves,\r\n  \"/word-discs\": WordDiscs,\r\n  \"/gm\": GmCheatSheet\r\n};\r\n\r\nexport default routes;\r\n","///<reference path=\"./types/global.d.ts\">\r\nimport App from './App.svelte';\r\nconst app = new App({\r\n    target: document.body\r\n});\r\nexport default app;\r\n"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","subscribe","store","callbacks","unsub","unsubscribe","null_to_empty","value","action_destroyer","action_result","destroy","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","i","length","d","element","name","document","createElement","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","removeAttribute","getAttribute","setAttribute","set_data","wholeText","set_style","key","important","style","setProperty","toggle_class","toggle","classList","current_component","set_current_component","component","get_current_component","Error","onMount","$$","on_mount","push","createEventDispatcher","type","detail","e","createEvent","initCustomEvent","custom_event","slice","call","bubble","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","schedule_update","then","flush","add_render_callback","flushing","seen_callbacks","Set","update","pop","callback","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","create_component","mount_component","on_destroy","m","new_on_destroy","map","filter","destroy_component","init","instance","create_fragment","not_equal","props","parent_component","prop_values","bound","context","Map","skip_bound","ready","ret","rest","fill","make_dirty","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","[object Object]","this","$destroy","index","indexOf","splice","$$props","obj","$$set","keys","subscriber_queue","readable","start","writable","stop","subscribers","set","new_value","run_queue","s","invalidate","subscriber","derived","stores","initial_value","single","isArray","stores_array","auto","inited","values","pending","cleanup","sync","result","unsubscribers","getLocation","hashPosition","window","location","href","substr","qsPosition","querystring","loc","$loc","link","hrefVar","tagName","toLowerCase","updateLink","updated","charAt","routes","prefix","RouteItem","path","_sveltesparouter","RegExp","pattern","str","loose","tmp","ext","arr","split","shift","substring","regexparam","route","conditions","userData","undefined","_pattern","_keys","startsWith","matches","exec","out","routesList","componentParams","dispatch","dispatchNextTick","match","checkConditions","puzzleName","puzzleHelp","contributor","character","x","y","characters","confetti","_","Math","random","sort","frame","loop","requestAnimationFrame","emoji","cancelAnimationFrame","P","fulfilled","step","generator","apply","thisArg","_arguments","next","isSolved","calcEnergy","tile","querySelectorAll","first","querySelector","tileClass","find","cl","tileId","parseInt","id","nextTile","calcNextEnergizedTile","last","getElementById","end","contains","remove","emptyId","el","elId","elClass","letters","anagrams","anagram","solution","icon","alt","guess","card","dataValue","word","letter","dataIndex","attributes","Direction","valves","parentElement","Up","Right","JSON","stringify","shuffleArray","array","t","floor","entries","isError","to","words","actives","discs","discIndex","discBuffer","wordIndex","toUpperCase","min","max","handleDiscClick","clearTimeout","setTimeout","toggleInfo","display","/","/honnleath","/anagram","/valves","/word-discs","/gm","body"],"mappings":"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"}